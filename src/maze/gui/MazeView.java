
package maze.gui;



import java.io.IOException;


import maze.logic.Board;
import maze.logic.BoardDefault;
import maze.logic.BoardFactory;
import maze.logic.BoardRandom;
/**
* Classe que extende uma JFrame que é o menu principal e inicial
* @author Tiago Mota ei09068
*/

public class MazeView extends javax.swing.JFrame {
	
	private static final long serialVersionUID = 1L;
	Options menuOp = new Options();
	
	private  Board tabuleiro = new Board();  //  @jve:decl-index=0:
	private JogoGraphic novo = null;

	/**
	 * Construtor da classe MazeView
	 */
	public MazeView() {
		initComponents();
	}



	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings({ "deprecation" })
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelTop = new javax.swing.JPanel();
        CreateGame = new javax.swing.JButton();
        botaoOpcao = new javax.swing.JButton();
        botaoExit = new javax.swing.JButton();
        imagem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jogo Labirinto");

        painelTop.setPreferredSize(new java.awt.Dimension(100, 50));

        CreateGame.setText("Create Game");
        CreateGame.setPreferredSize(new java.awt.Dimension(25, 23));
        CreateGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
					CreateGameActionPerformed(evt);
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
            }
        });

        botaoOpcao.setLabel("Options");
        botaoOpcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoOpcaoActionPerformed(evt);
            }
        });


        

       
        botaoExit.setText("Exit");
        botaoExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelTopLayout = new javax.swing.GroupLayout(painelTop);
        painelTop.setLayout(painelTopLayout);
        painelTopLayout.setHorizontalGroup(
            painelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, painelTopLayout.createSequentialGroup()
            	.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            	.addComponent(CreateGame)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoOpcao)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botaoExit)
                .addGap(66, 66, 66))
        );
        painelTopLayout.setVerticalGroup(
            painelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(painelTopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelTopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(CreateGame)
                    .addComponent(botaoOpcao)
                    .addComponent(botaoExit))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        getContentPane().add(painelTop, java.awt.BorderLayout.NORTH);

        imagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/maze/gui/Megaman[1].jpg"))); // NOI18N
        imagem.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        getContentPane().add(imagem, java.awt.BorderLayout.CENTER);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        //setBounds((screenSize.width-350)/2, (screenSize.height-360)/2, 350, 360);
        setBounds((screenSize.width-270)/2, (screenSize.height-500)/2, 270, 500);
    }
	/**
	 * Função que define o evento de quando se selecciona a tecla create game
	 * @param evt
	 * @throws IOException
	 */
	private void CreateGameActionPerformed(java.awt.event.ActionEvent evt) throws IOException {//GEN-FIRST:event_CreateGameActionPerformed
		BoardFactory bf;
		if(menuOp.getOpcao().getTipoLab() == 1)
			bf= new BoardRandom();
		else
			bf= new BoardDefault();
		
		tabuleiro = bf.create(menuOp.getOpcao().getTamanhoLabirinto(),  menuOp.getOpcao().getNumeroDragao(), menuOp.getOpcao().getTipoDragao());
		novo =  new JogoGraphic(tabuleiro,this);
		novo.setVisible(true);
		
		 this.setVisible(false);
	}
	
	public Board getTabuleiro() {
		return tabuleiro;
	}


	/**
	 * Função que define o evento de quando se selecciona a tecla options
	 * @param evt
	 */
	private void botaoOpcaoActionPerformed(java.awt.event.ActionEvent evt) {
		
		menuOp.setVisible(true);
		
	}
	/**
	 * Função que define o evento de quando se selecciona a tecla exit
	 * @param evt
	 */
	private void botaoExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExitActionPerformed
		System.exit(0);
	}//GEN-LAST:event_botaoExitActionPerformed

	/**
	 * Função main responsavel por correr o jogo em modo grafico
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				MazeView mainWindow = new MazeView();
				mainWindow.setVisible(true);




			}
		});
	}


    private javax.swing.JButton CreateGame;
    private javax.swing.JButton botaoExit;  
    private javax.swing.JButton botaoOpcao;
   
    private javax.swing.JLabel imagem;
    private javax.swing.JPanel painelTop;
   

	public JogoGraphic getNovo() {
		return novo;
	}

}
